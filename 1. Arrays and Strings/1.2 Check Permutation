/*Q 1.2) Check Permutation: Given two strings, write a 
		 method to decide if one is a permutation of the other.*/


#include<iostream>
#include<string>
#include<bitset>
using namespace std;

bool isPermutation(string a, string b){
	if(a.length()!=b.length()) return false;
	bitset<128> bs;
	
	for(int i=0;i<a.length();i++){
		bs.set((int)a[i]);
	}
	
	for(int i=0;i<b.length();i++){
		bs.reset((int)b[i]);
	}
	
	if(bs.none()) return true;
	
	return false;
}

void disp(string a, string b, bool var){
	if(a.length()==0) a="\"NULL STRING\"";
	if(b.length()==0) b="\"NULL STRING\"";
	if(var) cout<<a<<" is a permutation of "<<b<<endl;
	else cout<<a<<" is not a permutation of "<<b<<endl;
}

main(){
	
	string x,y;
	x="cat";
	y="mat";
	disp(x,y,isPermutation(x,y));
	
	x="";
	y="";
	disp(x,y,isPermutation(x,y));
	
	x="Boston";
	y="noBtos";
	disp(x,y,isPermutation(x,y));
	
	x="Bo,ston";
	y="Bos,ton";
	disp(x,y,isPermutation(x,y));
	
	x="aaa";
	y="a";
	disp(x,y,isPermutation(x,y));
	
	return 0;
}
